package tasks

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"log"
	"net/http"
)

type AutoGenerated struct {
	Result struct {
		Task struct {
			ID    string `json:"id"`
			Title string `json:"title"`
		}
	}
}

func AddTaskToDeal(title string, responsibleId int, DealId int) {
	//title := "test task"
	//responsibleId := 13938
	newReq := fmt.Sprintf(`{"fields":{"TITLE":"%v", "RESPONSIBLE_ID":%v, "UF_CRM_TASK":{"UF_CRM_TASK":"L_%v"}}}`, title, responsibleId, DealId)
	tr := bytes.NewReader([]byte(newReq))
	_, err := http.Post("https://onviz.bitrix24.ru/rest/13938/6nhrynxrvzm0vrfb/tasks.task.add", "application/json", tr)
	if err != nil {
		log.Println("Error http:post request to Bitrix24")
	}
}

//tasks.task.add
//{fields:{TITLE:'task for test', RESPONSIBLE_ID:13938, UF_CRM_TASK:{UF_CRM_TASK:'L_105528'}}}

func AddTaskToLead(title string, responsibleId string, leadId int) {
	//title := "test task"
	//responsibleId := 13938
	newReq := fmt.Sprintf(`{"fields":{"TITLE":"%v", "RESPONSIBLE_ID":%v, "UF_CRM_TASK":{"UF_CRM_TASK":"L_%v"}}}`, title, responsibleId, leadId)
	url := "https://onviz.bitrix24.ru/rest/13938/6nhrynxrvzm0vrfb/tasks.task.add"
	fmt.Println(newReq)
	fmt.Println("URL:>", url)

	var jsonStr = []byte(newReq)
	req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonStr))
	req.Header.Set("Content-Type", "application/json")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	fmt.Println("response Status:", resp.Status)
	//fmt.Println("response Headers:", resp.Header)
	body, _ := io.ReadAll(resp.Body)
	//fmt.Println("response Body:", string(body))

	var task AutoGenerated
	err = json.Unmarshal(body, &task)
	if err != nil {
		fmt.Println("error unmarshall")
		return
	}
	newData, err := json.Marshal(task)
	if err != nil {
		fmt.Println(err)
	} else {
		fmt.Println("newData: ", string(newData))
	}
	fmt.Println("LEAD :", task)

	fmt.Println("error lead collect")
	//DB.LeadCollectToDb(lead.Id, lead.Title, lead.Link, lead.Status, lead.Assigned)
	fmt.Println("lead added")

}
